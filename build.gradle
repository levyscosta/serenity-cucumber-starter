apply plugin: 'java'
apply plugin: "net.serenity-bdd.serenity-gradle-plugin"


repositories {
    mavenCentral()
    mavenLocal()
}

buildscript {
    repositories {
    mavenCentral()
    mavenLocal()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "net.serenity-bdd:serenity-gradle-plugin:4.0.15"
        classpath "net.serenity-bdd:serenity-single-page-report:4.0.15"
    }
}




//sourceCompatibility = 16
//targetCompatibility = 16

ext {
    serenity_version = '4.0.15'
    junit_platform_launcher_version="1.10.0"
    cucumber_junit_platform_engine_version="7.14.0"
    junit_platform_suite_version="1.10.0"
    junit_jupiter_engine_version="5.9.3"
    junit_vintage_engine_version="5.9.3"
    logback_classic_version="1.2.10"
    assertj_core_version="3.23.1"
}

dependencies {
    dependencies {
        testImplementation "net.serenity-bdd:serenity-core:${serenity_version}"
        testImplementation "net.serenity-bdd:serenity-cucumber:${serenity_version}"
        testImplementation "net.serenity-bdd:serenity-screenplay:${serenity_version}"
        testImplementation "net.serenity-bdd:serenity-screenplay-webdriver:${serenity_version}"
        testImplementation "net.serenity-bdd:serenity-ensure:${serenity_version}"
        testImplementation "org.junit.platform:junit-platform-launcher:${junit_platform_launcher_version}"
        testImplementation "io.cucumber:cucumber-junit-platform-engine:${cucumber_junit_platform_engine_version}"
        testImplementation "org.junit.platform:junit-platform-suite:${junit_platform_suite_version}"
        testImplementation "org.junit.jupiter:junit-jupiter-engine:${junit_jupiter_engine_version}"
        testImplementation "org.junit.vintage:junit-vintage-engine:${junit_vintage_engine_version}"
        implementation "ch.qos.logback:logback-classic:${logback_classic_version}"
        testImplementation "org.assertj:assertj-core:${assertj_core_version}"
    }
}

test {
    useJUnitPlatform()
}

configurations {
    cucumberRuntime{
        extendsFrom testImplementation
    }
}

task cucumberCli(){
    dependsOn assemble, testClasses
    doLast{
        javaexec{
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = [
                '--plugin', 'pretty',
                '--plugin', "html:target/cucumber.report.html",
                '--glue', 'starter'
            ]
        }

    }
}

gradle.startParameter.continueOnFailure = true

tasks.named('aggregate').configure {
    outputs.dir("target/site/serenity")
    // Configurações adicionais conforme necessário

}

test.finalizedBy(aggregate)
